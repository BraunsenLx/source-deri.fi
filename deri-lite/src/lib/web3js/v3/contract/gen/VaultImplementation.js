// this file is generated by script, don't modify it !!!
import { ContractBase } from '../../../shared/contract/contract_base.js'
import { deleteIndexedKey } from '../../../shared/utils/web3.js'
import { vaultImplementationAbi } from '../abi/vaultImplementationAbi.js'

export class VaultImplementation extends ContractBase {
  // init
  constructor(chainId, contractAddress, opts = {}) {
    super(chainId, contractAddress, vaultImplementationAbi)
    // for pool use
    this.initialBlock = opts.initialBlock || ""
  }

  // query
  async vaultLiquidityMultiplier() {
    const res = await this._call('vaultLiquidityMultiplier', [])
    return deleteIndexedKey(res)
  }
  async comptroller() {
    const res = await this._call('comptroller', [])
    return deleteIndexedKey(res)
  }
  async getBalances(vToken) {
    const res = await this._call('getBalances', [vToken])
    return deleteIndexedKey(res)
  }
  async getVaultLiquidity() {
    const res = await this._call('getVaultLiquidity', [])
    return deleteIndexedKey(res)
  }
  async getHypotheticalVaultLiquidity(vTokenModify, redeemVTokens) {
    const res = await this._call('getHypotheticalVaultLiquidity', [vTokenModify, redeemVTokens])
    return deleteIndexedKey(res)
  }
  async getMarketsIn() {
    const res = await this._call('getMarketsIn', [])
    return deleteIndexedKey(res)
  }
  async isInMarket(vToken) {
    const res = await this._call('isInMarket', [vToken])
    return deleteIndexedKey(res)
  }
  async nameId() {
    const res = await this._call('nameId', [])
    return deleteIndexedKey(res)
  }
  async pool() {
    const res = await this._call('pool', [])
    return deleteIndexedKey(res)
  }
  async tokenXVS() {
    const res = await this._call('tokenXVS', [])
    return deleteIndexedKey(res)
  }
  async vTokenETH() {
    const res = await this._call('vTokenETH', [])
    return deleteIndexedKey(res)
  }
  async versionId() {
    const res = await this._call('versionId', [])
    return deleteIndexedKey(res)
  }

  // tx
  // async claimVenus(accountAddress, account) {
  //   return await this._transact('claimVenus', [account], accountAddress)
  // }
  // async enterMarket(accountAddress, vToken) {
  //   return await this._transact('enterMarket', [vToken], accountAddress)
  // }
  // async exitMarket(accountAddress, vToken) {
  //   return await this._transact('exitMarket', [vToken], accountAddress)
  // }
  // async mint(accountAddress) {
  //   return await this._transact('mint', [], accountAddress)
  // }
  // async mint(accountAddress, vToken, amount) {
  //   return await this._transact('mint', [vToken, amount], accountAddress)
  // }
  // async redeem(accountAddress, vToken, amount) {
  //   return await this._transact('redeem', [vToken, amount], accountAddress)
  // }
  // async redeemAll(accountAddress, vToken) {
  //   return await this._transact('redeemAll', [vToken], accountAddress)
  // }
  // async redeemUnderlying(accountAddress, vToken, amount) {
  //   return await this._transact('redeemUnderlying', [vToken, amount], accountAddress)
  // }
  // async transfer(accountAddress, underlying, to, amount) {
  //   return await this._transact('transfer', [underlying, to, amount], accountAddress)
  // }
  // async transferAll(accountAddress, underlying, to) {
  //   return await this._transact('transferAll', [underlying, to], accountAddress)
  // }

}