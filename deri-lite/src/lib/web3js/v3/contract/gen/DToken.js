// this file is generated by script, don't modify it !!!
import { ContractBase } from '../../../shared/contract/contract_base.js'
import { deleteIndexedKey } from '../../../shared/utils/web3.js'
import { dTokenAbi } from '../abi/dTokenAbi.js'

export class DToken extends ContractBase {
  // init
  constructor(chainId, contractAddress, opts = {}) {
    super(chainId, contractAddress, dTokenAbi)
    // for pool use
    this.initialBlock = opts.initialBlock || ""
  }

  // query
  async balanceOf(owner) {
    const res = await this._call('balanceOf', [owner])
    return deleteIndexedKey(res)
  }
  async exists(tokenId) {
    const res = await this._call('exists', [tokenId])
    return deleteIndexedKey(res)
  }
  // async exists(owner) {
  //   const res = await this._call('exists', [owner])
  //   return deleteIndexedKey(res)
  // }
  async getApproved(tokenId) {
    const res = await this._call('getApproved', [tokenId])
    return deleteIndexedKey(res)
  }
  async getOwnerOf(tokenId) {
    const res = await this._call('getOwnerOf', [tokenId])
    return deleteIndexedKey(res)
  }
  async getTokenIdOf(owner) {
    const res = await this._call('getTokenIdOf', [owner])
    return deleteIndexedKey(res)
  }
  async isApprovedForAll(owner, operator) {
    const res = await this._call('isApprovedForAll', [owner, operator])
    return deleteIndexedKey(res)
  }
  async name() {
    const res = await this._call('name', [])
    return deleteIndexedKey(res)
  }
  async nameId() {
    const res = await this._call('nameId', [])
    return deleteIndexedKey(res)
  }
  async ownerOf(tokenId) {
    const res = await this._call('ownerOf', [tokenId])
    return deleteIndexedKey(res)
  }
  async pool() {
    const res = await this._call('pool', [])
    return deleteIndexedKey(res)
  }
  async supportsInterface(interfaceId) {
    const res = await this._call('supportsInterface', [interfaceId])
    return deleteIndexedKey(res)
  }
  async symbol() {
    const res = await this._call('symbol', [])
    return deleteIndexedKey(res)
  }
  async totalMinted() {
    const res = await this._call('totalMinted', [])
    return deleteIndexedKey(res)
  }
  async versionId() {
    const res = await this._call('versionId', [])
    return deleteIndexedKey(res)
  }

  // tx
  //  async approve(accountAddress, operator, tokenId) {
  //    return await this._transact('approve', [operator, tokenId], accountAddress)
  //  }
  //  async burn(accountAddress, tokenId) {
  //    return await this._transact('burn', [tokenId], accountAddress)
  //  }
  //  async mint(accountAddress, owner) {
  //    return await this._transact('mint', [owner], accountAddress)
  //  }
  //  async safeTransferFrom(accountAddress, from, to, tokenId) {
  //    return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)
  //  }
  //  async safeTransferFrom(accountAddress, from, to, tokenId, data) {
  //    return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)
  //  }
  //  async setApprovalForAll(accountAddress, operator, approved) {
  //    return await this._transact('setApprovalForAll', [operator, approved], accountAddress)
  //  }
  //  async transferFrom(accountAddress, from, to, tokenId) {
  //    return await this._transact('transferFrom', [from, to, tokenId], accountAddress)
  //  }

}